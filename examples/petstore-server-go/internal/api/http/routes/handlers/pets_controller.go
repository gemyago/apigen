// Code generated by apigen DO NOT EDIT.

package handlers

import (
	"net/http"

	. "github.com/gemyago/apigen/examples/petstore-server-go/internal/api/http/routes/models"
)

// Below is to workaround unused imports if that happens.
type _ func() Error

type PetsController interface {
	// POST /pets
	//
	// Request type: CreatePetParams,
	//
	// Response type: none
	CreatePet(NoResponseHandlerBuilder[
		*CreatePetParams,
	]) http.Handler

	// GET /pets/{petId}
	//
	// Request type: GetPetByIDParams,
	//
	// Response type: PetResponse
	GetPetByID(HandlerBuilder[
		*GetPetByIDParams,
		*PetResponse,
	]) http.Handler

	// GET /pets
	//
	// Request type: ListPetsParams,
	//
	// Response type: PetsResponse
	ListPets(HandlerBuilder[
		*ListPetsParams,
		*PetsResponse,
	]) http.Handler
}

// RegisterPetsRoutes will attach the following routes to the root handler:
// 
// - POST /pets
// 
// - GET /pets/{petId}
// 
// - GET /pets
// 
// Routes will use provided controller to handle requests.
func(rootHandler *RootHandler) RegisterPetsRoutes(controller PetsController) *RootHandler {
	builder := newPetsControllerBuilder(rootHandler)
	rootHandler.router.HandleRoute("POST", "/pets", controller.CreatePet(builder.CreatePet))
	rootHandler.router.HandleRoute("GET", "/pets/{petId}", controller.GetPetByID(builder.GetPetByID))
	rootHandler.router.HandleRoute("GET", "/pets", controller.ListPets(builder.ListPets))
	return rootHandler
}