// Code generated by apigen DO NOT EDIT.

package handlers

import (
	"encoding/json"
	"fmt"
	"net/http"
	"time"

	. "github.com/gemyago/apigen/examples/petstore-server-go/internal/api/http/v1routes/models"
)

// Below is to workaround unused imports.
var _ = http.MethodGet
var _ = time.Time{}
var _ = json.Unmarshal
var _ = fmt.Sprint
type _ func() Error

// PetsCreatePetRequest represents params for createPet operation
//
// Request: POST /pets.
type PetsCreatePetRequest struct {
	// Payload is parsed from request body and declared as payload.
	Payload *Pet
}

// PetsGetPetByIDRequest represents params for getPetById operation
//
// Request: GET /pets/{petId}.
type PetsGetPetByIDRequest struct {
	// PetID is parsed from request path and declared as petId.
	PetID int64
}

// PetsListPetsRequest represents params for listPets operation
//
// Request: GET /pets.
type PetsListPetsRequest struct {
	// Limit is parsed from request query and declared as limit.
	Limit int64
	// Offset is parsed from request query and declared as offset.
	Offset int64
}

type PetsController interface {
	// POST /pets
	//
	// Request type: PetsCreatePetRequest,
	//
	// Response type: none
	CreatePet(NoResponseHandlerBuilder[
		*PetsCreatePetRequest,
	]) http.Handler

	// GET /pets/{petId}
	//
	// Request type: PetsGetPetByIDRequest,
	//
	// Response type: PetResponse
	GetPetByID(HandlerBuilder[
		*PetsGetPetByIDRequest,
		*PetResponse,
	]) http.Handler

	// GET /pets
	//
	// Request type: PetsListPetsRequest,
	//
	// Response type: PetsResponse
	ListPets(HandlerBuilder[
		*PetsListPetsRequest,
		*PetsResponse,
	]) http.Handler
}

// RegisterPetsRoutes will attach the following routes to the root handler:
// 
// - POST /pets
// 
// - GET /pets/{petId}
// 
// - GET /pets
// 
// Routes will use provided controller to handle requests.
func(rootHandler *RootHandler) RegisterPetsRoutes(controller PetsController) *RootHandler {
	builder := newPetsControllerBuilder(rootHandler)
	rootHandler.router.HandleRoute("POST", "/pets", controller.CreatePet(builder.CreatePet))
	rootHandler.router.HandleRoute("GET", "/pets/{petId}", controller.GetPetByID(builder.GetPetByID))
	rootHandler.router.HandleRoute("GET", "/pets", controller.ListPets(builder.ListPets))
	return rootHandler
}