{{ #generatedCodeComment }}// {{.}}.

{{/generatedCodeComment}}package internal

{{#models}}
import (
	"time"
	"{{invokerPackage}}/{{ package }}"
)

// Below is to workaround unused imports.
var _ = time.Time{}

{{#model}}
func New{{classname}}Validator() FieldValidator[*{{package}}.{{classname}}] {
	{{#vars}}{{#isArray}}validate{{name}} := NewArrayValidator[{{>models/array-item-full-type}}](
		{{#mostInnerItems}}New{{{dataType}}}Validator(),{{/mostInnerItems}}
	)
	{{/isArray}}{{^isArray}}validate{{name}} := {{^isModel}}NewSimpleFieldValidator[{{#isNullable}}*{{/isNullable}}{{{dataType}}}]({{^isBoolean}}{{#required}}
		{{#isNullable}}SkipNullValidator({{/isNullable}}EnsureNonDefault[{{{dataType}}}]{{#isNullable}}){{/isNullable}},{{/required}}{{/isBoolean}}{{^isDate}}{{#minimum}}
		{{#isNullable}}SkipNullValidator({{/isNullable}}NewMinMaxValueValidator[{{{dataType}}}]({{.}}, {{exclusiveMinimum}}, true){{#isNullable}}){{/isNullable}},{{/minimum}}{{#maximum}}
		{{#isNullable}}SkipNullValidator({{/isNullable}}NewMinMaxValueValidator[{{{dataType}}}]({{.}}, {{exclusiveMaximum}}, false){{#isNullable}}){{/isNullable}},{{/maximum}}{{^isDateTime}}{{#minLength}}
		{{#isNullable}}SkipNullValidator({{/isNullable}}NewMinMaxLengthValidator[{{{dataType}}}]({{.}}, true){{#isNullable}}){{/isNullable}},{{/minLength}}{{#maxLength}}
		{{#isNullable}}SkipNullValidator({{/isNullable}}NewMinMaxLengthValidator[{{{dataType}}}]({{.}}, false){{#isNullable}}){{/isNullable}},{{/maxLength}}{{#pattern}}
		{{#isNullable}}SkipNullValidator({{/isNullable}}NewPatternValidator[{{{dataType}}}]("{{.}}"){{#isNullable}}){{/isNullable}},{{/pattern}}{{/isDateTime}}{{/isDate}}
	){{/isModel}}{{#isModel}}New{{dataType}}Validator(){{/isModel}}
	{{/isArray}}{{/vars}}
	return func(bindingCtx *BindingContext, field, location string, value *{{package}}.{{classname}}) {
		{{#vars}}
		validate{{name}}(bindingCtx, "{{baseName}}", location, {{#isModel}}&{{/isModel}}value.{{name}})
		{{/vars}}
	}
}
{{/model}}
{{/models}}
