package {{package}}

import (
	"net/http"

	"{{invokerPackage}}/models"
)

{{#operations}}
{{#operation}}
{{#allParams.0}}{{#allParams}}{{#isEnum}}
{{>enums/api-param-type}}
{{/isEnum}}{{/allParams}}type {{>request-type}} struct {
	{{#allParams}}
	{{>api-param-name}} {{>api-param-type}}
	{{/allParams}}
}{{/allParams.0}}
{{/operation}}
{{/operations}}

type {{baseName}}Controller struct {
{{#operations}}
{{#operation}}
	{{#lambda.tab_indented_2}}{{>operation-doc}}{{/lambda.tab_indented_2}}
	{{operationId}} httpHandlerFactory
{{/operation}}
{{/operations}}
}

type {{baseName}}ControllerBuilder struct {
{{#operations}}
{{#operation}}
	{{#lambda.tab_indented_2}}{{>operation-doc}}{{/lambda.tab_indented_2}}
	Handle{{operationId}} {{>action-builder-type}}
{{/operation}}
{{/operations}}
}

func (c *{{baseName}}ControllerBuilder) Finalize() *{{baseName}}Controller {
	// TODO: panic if any handler is null
	return &{{baseName}}Controller{
		{{#operations}}
		{{#operation}}
		{{operationId}}: c.Handle{{operationId}}.httpHandlerFactory,
		{{/operation}}
		{{/operations}}
	}
}

func Build{{baseName}}Controller() *{{baseName}}ControllerBuilder {
	controllerBuilder := &{{baseName}}ControllerBuilder{}
	{{#operations}}
	{{#operation}}
	controllerBuilder.Handle{{operationId}}.controllerBuilder = controllerBuilder
	controllerBuilder.Handle{{operationId}}.defaultStatusCode = {{#responses.0}}{{ code }}{{/responses.0}}
	controllerBuilder.Handle{{operationId}}.paramsParser = func(router httpRouter, w http.ResponseWriter, req *http.Request) (*{{baseName}}{{operationId}}Request, error) {
		panic("Not implemented")
	}
	{{/operation}}
	{{/operations}}
	return controllerBuilder
}
